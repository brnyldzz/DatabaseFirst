//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace northwind_databasefirst
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NorthwindEntities : DbContext
    {
        public NorthwindEntities()
            : base("name=NorthwindEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<CustomerDemographics> CustomerDemographics { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Order_Details> Order_Details { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<Shippers> Shippers { get; set; }
        public virtual DbSet<Suppliers> Suppliers { get; set; }
        public virtual DbSet<Territories> Territories { get; set; }
        public virtual DbSet<Alphabetical_list_of_products> Alphabetical_list_of_products { get; set; }
        public virtual DbSet<Category_Sales_for_1997> Category_Sales_for_1997 { get; set; }
        public virtual DbSet<Current_Product_List> Current_Product_List { get; set; }
        public virtual DbSet<Customer_and_Suppliers_by_City> Customer_and_Suppliers_by_City { get; set; }
        public virtual DbSet<Invoices> Invoices { get; set; }
        public virtual DbSet<Order_Details_Extended> Order_Details_Extended { get; set; }
        public virtual DbSet<Order_Subtotals> Order_Subtotals { get; set; }
        public virtual DbSet<Orders_Qry> Orders_Qry { get; set; }
        public virtual DbSet<Product_Sales_for_1997> Product_Sales_for_1997 { get; set; }
        public virtual DbSet<Products_Above_Average_Price> Products_Above_Average_Price { get; set; }
        public virtual DbSet<Products_by_Category> Products_by_Category { get; set; }
        public virtual DbSet<Sales_by_Category> Sales_by_Category { get; set; }
        public virtual DbSet<Sales_Totals_by_Amount> Sales_Totals_by_Amount { get; set; }
        public virtual DbSet<Summary_of_Sales_by_Quarter> Summary_of_Sales_by_Quarter { get; set; }
        public virtual DbSet<Summary_of_Sales_by_Year> Summary_of_Sales_by_Year { get; set; }
    
        public virtual ObjectResult<CustOrderHist_Result> CustOrderHist(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrderHist_Result>("CustOrderHist", customerIDParameter);
        }
    
        public virtual ObjectResult<CustOrdersDetail_Result> CustOrdersDetail(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrdersDetail_Result>("CustOrdersDetail", orderIDParameter);
        }
    
        public virtual ObjectResult<CustOrdersOrders_Result> CustOrdersOrders(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrdersOrders_Result>("CustOrdersOrders", customerIDParameter);
        }
    
        public virtual ObjectResult<Employee_Sales_by_Country_Result> Employee_Sales_by_Country(Nullable<System.DateTime> beginning_Date, Nullable<System.DateTime> ending_Date)
        {
            var beginning_DateParameter = beginning_Date.HasValue ?
                new ObjectParameter("Beginning_Date", beginning_Date) :
                new ObjectParameter("Beginning_Date", typeof(System.DateTime));
    
            var ending_DateParameter = ending_Date.HasValue ?
                new ObjectParameter("Ending_Date", ending_Date) :
                new ObjectParameter("Ending_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_Sales_by_Country_Result>("Employee_Sales_by_Country", beginning_DateParameter, ending_DateParameter);
        }
    
        public virtual ObjectResult<Sales_by_Year_Result> Sales_by_Year(Nullable<System.DateTime> beginning_Date, Nullable<System.DateTime> ending_Date)
        {
            var beginning_DateParameter = beginning_Date.HasValue ?
                new ObjectParameter("Beginning_Date", beginning_Date) :
                new ObjectParameter("Beginning_Date", typeof(System.DateTime));
    
            var ending_DateParameter = ending_Date.HasValue ?
                new ObjectParameter("Ending_Date", ending_Date) :
                new ObjectParameter("Ending_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sales_by_Year_Result>("Sales_by_Year", beginning_DateParameter, ending_DateParameter);
        }
    
        public virtual ObjectResult<SalesByCategory_Result> SalesByCategory(string categoryName, string ordYear)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var ordYearParameter = ordYear != null ?
                new ObjectParameter("OrdYear", ordYear) :
                new ObjectParameter("OrdYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByCategory_Result>("SalesByCategory", categoryNameParameter, ordYearParameter);
        }
    
        public virtual int sp_calisanEkle(string lastName, string firstName, string title, string titleOfCourtesy, Nullable<System.DateTime> birthDate, Nullable<System.DateTime> hireDate, string address, string city, string region, string postalCode, string country, string homePhone, string extension, string notes, Nullable<int> reportsTo, string photoPath)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var titleOfCourtesyParameter = titleOfCourtesy != null ?
                new ObjectParameter("TitleOfCourtesy", titleOfCourtesy) :
                new ObjectParameter("TitleOfCourtesy", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var hireDateParameter = hireDate.HasValue ?
                new ObjectParameter("HireDate", hireDate) :
                new ObjectParameter("HireDate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var reportsToParameter = reportsTo.HasValue ?
                new ObjectParameter("ReportsTo", reportsTo) :
                new ObjectParameter("ReportsTo", typeof(int));
    
            var photoPathParameter = photoPath != null ?
                new ObjectParameter("PhotoPath", photoPath) :
                new ObjectParameter("PhotoPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_calisanEkle", lastNameParameter, firstNameParameter, titleParameter, titleOfCourtesyParameter, birthDateParameter, hireDateParameter, addressParameter, cityParameter, regionParameter, postalCodeParameter, countryParameter, homePhoneParameter, extensionParameter, notesParameter, reportsToParameter, photoPathParameter);
        }
    
        public virtual int sp_calisanGuncelle(Nullable<int> id, string lastName, string firstName, string title, string titleOfCourtesy, Nullable<System.DateTime> birthDate, Nullable<System.DateTime> hireDate, string address, string city, string region, string postalCode, string country, string homePhone, string extension, string notes, Nullable<int> reportsTo, string photoPath)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var titleOfCourtesyParameter = titleOfCourtesy != null ?
                new ObjectParameter("TitleOfCourtesy", titleOfCourtesy) :
                new ObjectParameter("TitleOfCourtesy", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var hireDateParameter = hireDate.HasValue ?
                new ObjectParameter("HireDate", hireDate) :
                new ObjectParameter("HireDate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var reportsToParameter = reportsTo.HasValue ?
                new ObjectParameter("ReportsTo", reportsTo) :
                new ObjectParameter("ReportsTo", typeof(int));
    
            var photoPathParameter = photoPath != null ?
                new ObjectParameter("PhotoPath", photoPath) :
                new ObjectParameter("PhotoPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_calisanGuncelle", idParameter, lastNameParameter, firstNameParameter, titleParameter, titleOfCourtesyParameter, birthDateParameter, hireDateParameter, addressParameter, cityParameter, regionParameter, postalCodeParameter, countryParameter, homePhoneParameter, extensionParameter, notesParameter, reportsToParameter, photoPathParameter);
        }
    
        public virtual ObjectResult<sp_calisanListele_Result> sp_calisanListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_calisanListele_Result>("sp_calisanListele");
        }
    
        public virtual int sp_calisanSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_calisanSil", idParameter);
        }
    
        public virtual int sp_kategoriEkle(string categoryName, string description)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_kategoriEkle", categoryNameParameter, descriptionParameter);
        }
    
        public virtual int sp_kategoriGuncelle(Nullable<int> id, string categoryName, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_kategoriGuncelle", idParameter, categoryNameParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<sp_kategoriListele_Result> sp_kategoriListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_kategoriListele_Result>("sp_kategoriListele");
        }
    
        public virtual int sp_kategoriSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_kategoriSil", idParameter);
        }
    
        public virtual int sp_musteriEkle(string customerID, string companyName, string contactName, string contactTitle, string address, string city, string region, string postalCode, string country, string phone, string fax)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactTitleParameter = contactTitle != null ?
                new ObjectParameter("ContactTitle", contactTitle) :
                new ObjectParameter("ContactTitle", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_musteriEkle", customerIDParameter, companyNameParameter, contactNameParameter, contactTitleParameter, addressParameter, cityParameter, regionParameter, postalCodeParameter, countryParameter, phoneParameter, faxParameter);
        }
    
        public virtual int sp_musteriGuncelle(string id, string companyName, string contactName, string contactTitle, string address, string city, string region, string postalCode, string country, string phone, string fax)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactTitleParameter = contactTitle != null ?
                new ObjectParameter("ContactTitle", contactTitle) :
                new ObjectParameter("ContactTitle", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_musteriGuncelle", idParameter, companyNameParameter, contactNameParameter, contactTitleParameter, addressParameter, cityParameter, regionParameter, postalCodeParameter, countryParameter, phoneParameter, faxParameter);
        }
    
        public virtual ObjectResult<sp_musteriListele_Result> sp_musteriListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_musteriListele_Result>("sp_musteriListele");
        }
    
        public virtual int sp_musteriSil(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_musteriSil", idParameter);
        }
    
        public virtual int sp_siparisDetayiEkle(Nullable<int> orderID, Nullable<int> productID, Nullable<decimal> unitPrice, Nullable<short> quantity, Nullable<float> discount)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(short));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_siparisDetayiEkle", orderIDParameter, productIDParameter, unitPriceParameter, quantityParameter, discountParameter);
        }
    
        public virtual int sp_siparisDetayiGuncelle(Nullable<int> id, Nullable<int> productID, Nullable<decimal> unitPrice, Nullable<short> quantity, Nullable<float> discount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(short));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_siparisDetayiGuncelle", idParameter, productIDParameter, unitPriceParameter, quantityParameter, discountParameter);
        }
    
        public virtual ObjectResult<sp_siparisDetayiListele_Result> sp_siparisDetayiListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_siparisDetayiListele_Result>("sp_siparisDetayiListele");
        }
    
        public virtual int sp_siparisDetayiSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_siparisDetayiSil", idParameter);
        }
    
        public virtual int sp_siparisEkle(string customerID, Nullable<int> employeeID, Nullable<System.DateTime> orderDate, Nullable<System.DateTime> requiredDate, Nullable<System.DateTime> shippedDate, Nullable<int> shipVia, Nullable<decimal> freight, string shipName, string shipAddress, string shipCity, string shipRegion, string shipPostalCode, string shipCountry)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var requiredDateParameter = requiredDate.HasValue ?
                new ObjectParameter("RequiredDate", requiredDate) :
                new ObjectParameter("RequiredDate", typeof(System.DateTime));
    
            var shippedDateParameter = shippedDate.HasValue ?
                new ObjectParameter("ShippedDate", shippedDate) :
                new ObjectParameter("ShippedDate", typeof(System.DateTime));
    
            var shipViaParameter = shipVia.HasValue ?
                new ObjectParameter("ShipVia", shipVia) :
                new ObjectParameter("ShipVia", typeof(int));
    
            var freightParameter = freight.HasValue ?
                new ObjectParameter("Freight", freight) :
                new ObjectParameter("Freight", typeof(decimal));
    
            var shipNameParameter = shipName != null ?
                new ObjectParameter("ShipName", shipName) :
                new ObjectParameter("ShipName", typeof(string));
    
            var shipAddressParameter = shipAddress != null ?
                new ObjectParameter("ShipAddress", shipAddress) :
                new ObjectParameter("ShipAddress", typeof(string));
    
            var shipCityParameter = shipCity != null ?
                new ObjectParameter("ShipCity", shipCity) :
                new ObjectParameter("ShipCity", typeof(string));
    
            var shipRegionParameter = shipRegion != null ?
                new ObjectParameter("ShipRegion", shipRegion) :
                new ObjectParameter("ShipRegion", typeof(string));
    
            var shipPostalCodeParameter = shipPostalCode != null ?
                new ObjectParameter("ShipPostalCode", shipPostalCode) :
                new ObjectParameter("ShipPostalCode", typeof(string));
    
            var shipCountryParameter = shipCountry != null ?
                new ObjectParameter("ShipCountry", shipCountry) :
                new ObjectParameter("ShipCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_siparisEkle", customerIDParameter, employeeIDParameter, orderDateParameter, requiredDateParameter, shippedDateParameter, shipViaParameter, freightParameter, shipNameParameter, shipAddressParameter, shipCityParameter, shipRegionParameter, shipPostalCodeParameter, shipCountryParameter);
        }
    
        public virtual int sp_siparisGuncelle(Nullable<int> id, string customerID, Nullable<int> employeeID, Nullable<System.DateTime> orderDate, Nullable<System.DateTime> requiredDate, Nullable<System.DateTime> shippedDate, Nullable<int> shipVia, Nullable<decimal> freight, string shipName, string shipAddress, string shipCity, string shipRegion, string shipPostalCode, string shipCountry)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var requiredDateParameter = requiredDate.HasValue ?
                new ObjectParameter("RequiredDate", requiredDate) :
                new ObjectParameter("RequiredDate", typeof(System.DateTime));
    
            var shippedDateParameter = shippedDate.HasValue ?
                new ObjectParameter("ShippedDate", shippedDate) :
                new ObjectParameter("ShippedDate", typeof(System.DateTime));
    
            var shipViaParameter = shipVia.HasValue ?
                new ObjectParameter("ShipVia", shipVia) :
                new ObjectParameter("ShipVia", typeof(int));
    
            var freightParameter = freight.HasValue ?
                new ObjectParameter("Freight", freight) :
                new ObjectParameter("Freight", typeof(decimal));
    
            var shipNameParameter = shipName != null ?
                new ObjectParameter("ShipName", shipName) :
                new ObjectParameter("ShipName", typeof(string));
    
            var shipAddressParameter = shipAddress != null ?
                new ObjectParameter("ShipAddress", shipAddress) :
                new ObjectParameter("ShipAddress", typeof(string));
    
            var shipCityParameter = shipCity != null ?
                new ObjectParameter("ShipCity", shipCity) :
                new ObjectParameter("ShipCity", typeof(string));
    
            var shipRegionParameter = shipRegion != null ?
                new ObjectParameter("ShipRegion", shipRegion) :
                new ObjectParameter("ShipRegion", typeof(string));
    
            var shipPostalCodeParameter = shipPostalCode != null ?
                new ObjectParameter("ShipPostalCode", shipPostalCode) :
                new ObjectParameter("ShipPostalCode", typeof(string));
    
            var shipCountryParameter = shipCountry != null ?
                new ObjectParameter("ShipCountry", shipCountry) :
                new ObjectParameter("ShipCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_siparisGuncelle", idParameter, customerIDParameter, employeeIDParameter, orderDateParameter, requiredDateParameter, shippedDateParameter, shipViaParameter, freightParameter, shipNameParameter, shipAddressParameter, shipCityParameter, shipRegionParameter, shipPostalCodeParameter, shipCountryParameter);
        }
    
        public virtual ObjectResult<sp_siparisListele_Result> sp_siparisListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_siparisListele_Result>("sp_siparisListele");
        }
    
        public virtual int sp_siparisSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_siparisSil", idParameter);
        }
    
        public virtual int sp_urunEkle(string productName, Nullable<int> supplierID, Nullable<int> categoryID, string quantityPerUnit, Nullable<decimal> unitPrice, Nullable<short> unitsInStock, Nullable<short> unitsOnOrder, Nullable<short> reorderLevel, Nullable<bool> disContinued)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var quantityPerUnitParameter = quantityPerUnit != null ?
                new ObjectParameter("QuantityPerUnit", quantityPerUnit) :
                new ObjectParameter("QuantityPerUnit", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var unitsInStockParameter = unitsInStock.HasValue ?
                new ObjectParameter("UnitsInStock", unitsInStock) :
                new ObjectParameter("UnitsInStock", typeof(short));
    
            var unitsOnOrderParameter = unitsOnOrder.HasValue ?
                new ObjectParameter("UnitsOnOrder", unitsOnOrder) :
                new ObjectParameter("UnitsOnOrder", typeof(short));
    
            var reorderLevelParameter = reorderLevel.HasValue ?
                new ObjectParameter("ReorderLevel", reorderLevel) :
                new ObjectParameter("ReorderLevel", typeof(short));
    
            var disContinuedParameter = disContinued.HasValue ?
                new ObjectParameter("DisContinued", disContinued) :
                new ObjectParameter("DisContinued", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_urunEkle", productNameParameter, supplierIDParameter, categoryIDParameter, quantityPerUnitParameter, unitPriceParameter, unitsInStockParameter, unitsOnOrderParameter, reorderLevelParameter, disContinuedParameter);
        }
    
        public virtual int sp_urunGuncelle(Nullable<int> id, string productName, Nullable<int> supplierID, Nullable<int> categoryID, string quantityPerUnit, Nullable<decimal> unitPrice, Nullable<short> unitsInStock, Nullable<short> unitsOnOrder, Nullable<short> reorderLevel, Nullable<bool> disContinued)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var quantityPerUnitParameter = quantityPerUnit != null ?
                new ObjectParameter("QuantityPerUnit", quantityPerUnit) :
                new ObjectParameter("QuantityPerUnit", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var unitsInStockParameter = unitsInStock.HasValue ?
                new ObjectParameter("UnitsInStock", unitsInStock) :
                new ObjectParameter("UnitsInStock", typeof(short));
    
            var unitsOnOrderParameter = unitsOnOrder.HasValue ?
                new ObjectParameter("UnitsOnOrder", unitsOnOrder) :
                new ObjectParameter("UnitsOnOrder", typeof(short));
    
            var reorderLevelParameter = reorderLevel.HasValue ?
                new ObjectParameter("ReorderLevel", reorderLevel) :
                new ObjectParameter("ReorderLevel", typeof(short));
    
            var disContinuedParameter = disContinued.HasValue ?
                new ObjectParameter("DisContinued", disContinued) :
                new ObjectParameter("DisContinued", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_urunGuncelle", idParameter, productNameParameter, supplierIDParameter, categoryIDParameter, quantityPerUnitParameter, unitPriceParameter, unitsInStockParameter, unitsOnOrderParameter, reorderLevelParameter, disContinuedParameter);
        }
    
        public virtual ObjectResult<sp_urunListele_Result> sp_urunListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_urunListele_Result>("sp_urunListele");
        }
    
        public virtual int sp_urunSil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_urunSil", idParameter);
        }
    
        public virtual ObjectResult<Ten_Most_Expensive_Products_Result> Ten_Most_Expensive_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ten_Most_Expensive_Products_Result>("Ten_Most_Expensive_Products");
        }
    }
}
